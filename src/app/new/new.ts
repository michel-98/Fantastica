// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

export interface News {
    section: Section;
}

export interface Section {
    article: Article;
}

export interface Article {
    "@id": string;
    "@style": string;
    h1: string;
    p: string;
    nav: Nav;
    div: ArticleDiv;
}

export interface ArticleDiv {
    "@class": string;
    div: PurpleDiv[];
}

export class Giocatore{
    nome: string;
    percentuale: number;
    ruolo:string;
}

export class Giocatore2{
    nome: string;
    ruolo:string;
}

export interface PurpleDiv {
    "@id": string;
    "@itemscope": string;
    "@itemtype": string;
    "@class": PurpleClass;
    "#comment": string[];
    div: FluffyDiv[];
    header: HeaderElement[];
    br: string;
}

export enum PurpleClass {
    MatchLazy = "match lazy",
}

export interface FluffyDiv {
    "@class": FluffyClass;
    header?: PurpleHeader;
    div: TentacledDiv[];
    footer?: Footer;
}

export enum FluffyClass {
    CardMatchCardP2PaperLazy = "card match-card p-2 paper _lazy",
    FlexRowLazy = "flex-row _lazy",
    RowLineupsLazy = "row lineups _lazy",
    RowLineupsReservesLazy = "row lineups reserves _lazy",
    RowRowResponsiveCommentsG2Pb4_Lazy = "row row-responsive comments g-2 pb-4 _lazy",
}

export interface TentacledDiv {
    "@class": TentacledClass;
    div?: IndigoDiv[] | IndecentDiv;
    h2?: Footer;
    p?: Footer | string;
    a?: A[];
    span?: Footer;
}

export enum TentacledClass {
    ColBox = "col box",
    ColPlayerListAway = "col player-list away",
    ColPlayerListHome = "col player-list home",
    HiddenXsPitchFrame = "hidden-xs pitch-frame",
    MatchUpDFlex = "match-up d-flex",
}

export interface A {
    "@class": AClass;
    "@href": string;
    span: Footer[];
    div?: ADiv;
}

export enum AClass {
    P1 = "p-1",
    Player = "player",
}

export interface ADiv {
    "@class": StickyClass;
    div: StickyDiv;
}

export enum StickyClass {
    ProgressPlayerPercentageGood = "progress player-percentage good",
    ProgressPlayerPercentageWarn = "progress player-percentage warn",
}

export interface StickyDiv {
    "@class": IndigoClass;
    "@role": Role;
    "@style": Style;
    "@aria-label": string;
    "@aria-valuenow": string;
    "@aria-valuemin": string;
    "@aria-valuemax": string;
    "@data-value": string;
    span: Footer;
}

export enum IndigoClass {
    ProgressBar = "progress-bar",
}

export enum Role {
    Progressbar = "progressbar",
}

export enum Style {
    Width1 = "width: 1%",
    Width10 = "width: 10%",
    Width15 = "width: 15%",
    Width20 = "width: 20%",
    Width25 = "width: 25%",
    Width30 = "width: 30%",
    Width35 = "width: 35%",
    Width40 = "width: 40%",
    Width45 = "width: 45%",
    Width5 = "width: 5%",
    Width50 = "width: 50%",
    Width55 = "width: 55%",
    Width60 = "width: 60%",
    Width65 = "width: 65%",
    Width70 = "width: 70%",
    Width75 = "width: 75%",
    Width80 = "width: 80%",
    Width85 = "width: 85%",
    Width90 = "width: 90%",
}

export interface Footer {
    "@class": FooterClass;
    "#text"?: string;
}

export enum FooterClass {
    BoxContent = "box-content",
    ClassPlayerName = "player-name ",
    LabelLabelDanger = "label label-danger",
    LabelLabelInfo = "label label-info",
    LabelLabelWarning = "label label-warning",
    LastUpdate = "last-update",
    MB1 = "mb-1",
    MXAutoLabel = "mx-auto label",
    MatchTeamLabel = "match-team label",
    PlayerName = "player-name",
    PlayerNamePlayerNameLong = "player-name player-name-long",
    PlayerPercentageValue = "player-percentage-value",
    PlayerProgress = "player-progress",
    PlayerRoleRoleA = "player-role role-a",
    PlayerRoleRoleC = "player-role role-c",
    PlayerRoleRoleD = "player-role role-d",
    PlayerRoleRoleP = "player-role role-p",
    PullLeftLabel = "pull-left label",
    PullRightLabel = "pull-right label",
    SrOnly = "sr-only",
}

export interface IndigoDiv {
    "@class": IndecentClass;
    "@itemprop"?: DivItemprop;
    "@itemscope"?: string;
    "@itemtype"?: string;
    figure?: Figure;
    "#text"?: Text;
}

export enum Text {
    Vs = "vs",
}

export enum IndecentClass {
    Separator = "separator",
    TeamAway = "team away",
    TeamHome = "team home",
}

export enum DivItemprop {
    AwayTeam = "awayTeam",
    HomeTeam = "homeTeam",
}

export interface Figure {
    "@class": FigureClass;
    img: { [key: string]: string };
    figcaption: Figcaption;
}

export enum FigureClass {
    UIThumbnailPullRight = "ui-thumbnail pull-right",
}

export interface Figcaption {
    "@class": FigcaptionClass;
    "@itemprop": FigcaptionItemprop;
    "#text": string;
}

export enum FigcaptionClass {
    Label = "label",
}

export enum FigcaptionItemprop {
    Name = "name",
}

export interface IndecentDiv {
    "@class": HilariousClass;
    div?: HilariousDiv;
    p?: PElement[] | PElement;
}

export enum HilariousClass {
    BoxContent = "box-content",
    Px4PitchContainer = "px-4 pitch-container",
}

export interface HilariousDiv {
    "@class": AmbitiousClass;
    div: AmbitiousDiv[];
    img: Img;
}

export enum AmbitiousClass {
    Pitch = "pitch",
}

export interface AmbitiousDiv {
    "@class": IndecentClass;
    div: CunningDiv[];
}

export interface CunningDiv {
    "@class": CunningClass;
    "@data-id"?: string;
    "@data-zone-size"?: string;
    "@data-count"?: string;
    "@data-zone"?: string;
    div?: MagentaDiv;
}

export enum CunningClass {
    PlayerRoleA = "player role-A",
    PlayerRoleC = "player role-C",
    PlayerRoleD = "player role-D",
    PlayerRoleP = "player role-P",
    Separator = "separator",
}

export interface MagentaDiv {
    "@class": MagentaClass;
    span: Footer[];
}

export enum MagentaClass {
    PlayerPin = "player-pin",
}

export interface Img {
    "@class": ImgClass;
    "@data-src": string;
}

export enum ImgClass {
    BackgroundLazyload = "background lazyload",
}

export interface PElement {
    b: string[] | string;
    "#text"?: string[] | string;
}

export interface PurpleHeader {
    "@class": FriskyClass;
    small: Small;
}

export enum FriskyClass {
    DFlexMB1 = "d-flex mb-1",
}

export interface Small {
    "@class": SmallClass;
    "@itemprop": SmallItemprop;
    "@content": Content;
    i: I;
    "#text": string;
}

export enum SmallClass {
    LabelMlAutoMatchDate = "label ml-auto match-date",
}

export enum Content {
    Domenica29Agosto2021 = "domenica 29 agosto 2021",
    Sabato28Agosto2021 = "sabato 28 agosto 2021",
    Venerd23627Agosto2021 = "venerd&#236; 27 agosto 2021",
}

export enum SmallItemprop {
    StartDate = "startDate",
}

export interface I {
    "@class": IClass;
}

export enum IClass {
    FaFaChevronLeft = "fa fa-chevron-left",
    FaFaClockO = "fa fa-clock-o",
}

export interface HeaderElement {
    "@class": MischievousClass;
    span: Footer[] | Footer;
}

export enum MischievousClass {
    SectionLabelMB3DFlexLazy = "section-label mb-3 d-flex _lazy",
}

export interface Nav {
    "@id": string;
    "@class": string;
    "@role": string;
    ul: UL;
    button: Button;
}

export interface Button {
    "@class": string;
    "@aria-label": string;
    i: I;
}

export interface UL {
    "@class": string;
    li: Li[];
}

export interface Li {
    "@class": LiClass;
    a: A;
}

export enum LiClass {
    MatchItemMenuItem = "match-item menu-item",
}
